package util;

import java.time.LocalDate;
import java.util.ArrayList;

public class Util {
	Data data = new Data();
	public static ArrayList<Emprestimo> emprestimos = new ArrayList<>();
	public static ArrayList<Livro> livros = new ArrayList<>();

	public void emprestarLivro(int indiceLivro, String aluno, int funcao) {
		for (Emprestimo emprestimo : emprestimos) {
			if (emprestimo.aluno.equals(aluno)) {
				System.out.println("Essa pessoa ja possui emprestimos");
				return;
			}
		}
		emprestimos.add(new Emprestimo(indiceLivro, aluno, funcao));
		System.out.println("Livro \"" + livros.get(indiceLivro).titulo + "\" emprestado para " + aluno);
	}

	public void listarEmprestimos() {
		System.out.println("Empréstimos realizados:");
		for (Emprestimo e : emprestimos) {
			if (e.funcao == 1) {
				System.out.println("Professor: " + e.aluno + " | Livro: " + livros.get(e.indiceLivro).titulo
						+ " | Data de entrega: " + data.dataEntregaProfessorFormatado);
			} else {
				System.out.println("Aluno: " + e.aluno + " | Livro: " + livros.get(e.indiceLivro).titulo
						+ " | Data de entrega: " + data.dataEntregaAlunoFormatado);
			}
		}
	}

	public void cadastrarLivro(String titulo, String autor, String ISBN) {
		livros.add(new Livro(titulo, autor, ISBN));
		System.out.println("Livro cadastrado com sucesso!");
	}

	public boolean verif_ISBN(String ISBN) {
		if (ISBN.length() == 10 || ISBN.length() == 13) {
			return true;
		} else {
			return false;
		}
	}

	public void listarLivros() {
		System.out.println("Lista de livros disponíveis:");
		for (int i = 0; i < livros.size(); i++) {
			System.out.println(i + " - " + livros.get(i).titulo + " | Autor: " + livros.get(i).autor + " | ISBN: "
					+ livros.get(i).ISBN);
		}
	}
	public void devolverLivro(int indiceLivro) {
		Emprestimo emprestimo = null;
		int indexEmprestimo = -1;
		for(int i=0;i<emprestimos.size();i++) {
			if(emprestimos.get(i).indiceLivro == indiceLivro) {
				emprestimo = emprestimos.get(i);
				indexEmprestimo = i;
				break;
			}
		}
		if(emprestimo == null) {
			System.out.println("Erro livro não encontrado");
			return;
		}
		LocalDate dataDevolucao = data.DataEntrada();
		if(dataDevolucao == null) {
			System.out.println("Devolução canceladada devido ao formato invalido");
			return;
		}
		LocalDate dataEntregaPrevista;
		if(emprestimo.funcao == 1) {
			dataEntregaPrevista = emprestimo.dataEmprestimo.plusDays(15);
		}
	}
}